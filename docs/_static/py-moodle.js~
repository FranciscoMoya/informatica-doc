function builtinRead(x) {
	if (Sk.builtinFiles === undefined || Sk.builtinFiles["files"][x] === undefined)
		throw "File not found: '" + x + "'";
	return Sk.builtinFiles["files"][x];
}

function stdOut(text) {
	$('#output').append(text);
}

function buildProg() {
	var prog = $('#code').val();
	$('#id_onlinetext_editor').val(prog);
	return prog + unittest($('#unittest'));
}

function unittest(elem) {
	if (elem.length == 0)
		return '\ndef test_():\n return True';
	return '\nimport unittest\n' + 
		elem.html() +
	   	'\ndef test_():\n' +
		' t=Test()\n t.main()\n' +
		' return t.numFailed == 0'; 
}


function testPythonProgram(prog) {
	var testFail = 'Corrije los errores antes de enviar.'
	return new Promise(function (resolve, reject) {
		Sk.misceval.asyncToPromise(function () {
			return Sk.importMainWithBody("<stdin>", false, prog, true);
		}).then(function (module) {
			var test = module.tp$getattr('test_');
		        Sk.misceval.callsimAsync(null, test).then(
				function (r) { if (r.v) resolve(); else reject(testFail); },
				reject);
		}, reject);
	});
}

function isPython3Source() {
	var py3 = $('#python3')
	if (py3.length == 0) return true;
	return py3.prop('checked');
}

function testAndSubmitPythonProgram(e) {
	e.preventDefault();

	var	prog = buildProg(),
		output = $('#output'), 
		status = $('#status'),
		form = $('#mform1');

	status.text('');
	output.text('');
	Sk.configure({
		output: stdOut,
		read: builtinRead,
		python3: isPython3Source(),
		imageProxy: 'http://image.runestone.academy:8080/320x',
		inputfunTakesPrompt: true,
	});
	(Sk.TurtleGraphics || (Sk.TurtleGraphics = {})).target = this.graphics;
	Sk.canvas = 'canvas';
	testPythonProgram(prog).then(
		function success(r) { 
			$.post(form.attr('action'), form.serialize(), function(msg) {
				form.replaceWith($('div.submissionstatustable', $(msg)));
			});
		}, 
		function failure(err) { 
			status.html('<p>' + err.toString() + '</p>');
		});
}


function initPythonMoodleTask() {
	var editor = $('div.felement.feditor');
	if (editor.length == 0)
		return;
	editor.hide();
	editor.after(
		'<div style="float:right; background-color:#FFF;"><input type="checkbox" id="python3" checked>Python 3</div>' + 
		'<textarea style="width:100%" id="code">' + $('#id_onlinetext_editor').val() + '</textarea>' +
		'<pre id="output"></pre>' +
		'<div id="canvas"></div>' + 
		'<div id="status"></div>');
	$('#mform1').submit(testAndSubmitPythonProgram);
}

function loadScript(src) {
	var base = '//franciscomoya.github.io/informatica-doc/docs/_static/';
	return new Promise(function (resolve, reject) {
		var s = document.createElement('script');
		s.src = base + src;
		s.onload = resolve;
		s.onerror = reject;
		document.head.appendChild(s);
	});
}

loadScript('skulpt.min.js').then(function(){
	loadScript('skulpt-stdlib.js').then(function(){
		loadScript('jquery.js').then(function(){
			$(document).ready(initPythonMoodleTask);
		});
	});
});

